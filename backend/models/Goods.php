<?php
/**
 * Created by PhpStorm.
 * User: asus
 * Date: 2017/8/14
 * Time: 14:40
 */

namespace backend\models;


use Codeception\Lib\Generator\Helper;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;

class Goods extends ActiveRecord
{
    //验证
    public function rules()
    {
        /*goods商品列表显示：
name	varchar(20)	商品名称
sn	varchar(20)	货号
logo	varchar(255)	LOGO图片
goods_category_id	int	商品分类id（链表goods_category）
brand_id	int	品牌分类（brand表）（链表嵌套）
market_price	decimal(10,2)	市场价格
shop_price	decimal(10, 2)	商品价格
stock	int	库存
is_on_sale	int(1)	是否在售(1在售 0下架)
status	inter(1)	状态(1正常 0回收站)
sort	int()	排序
create_time	int()	添加时间*/
        return [
            [['name','market_price','shop_price','brand_id','goods_category_id','stock','is_on_sale','status','sort'],'required'],
            [['logo'],'safe']
        ]; // TODO: Change the autogenerated stub.
    }
    //设置中文
    public function attributeLabels()
    {
        return [
            'name'=>'商品名称',
            'sn'=>'货号',
            'logo'=>'相册',
            'market_price'=>'市场价格',
            'shop_price'=>'商品价格',
            'goods_category_id'=>'商品分类',
            'brand_id'=>'品牌分类',
            'stock'=>'库存',
            'is_on_sale'=>'是否在售',
            'status'=>'状态',
            'sort'=>'排序',
            'goods_id'=>'简介',
            'create_time'=>'添加时间'
        ]; // TODO: Change the autogenerated stub
    }
    //获取相册
    /*
    * 商品和相册关系 1对多
    */
    public function getGalleries()
    {
        return $this->hasMany(Goods_gallery::className(),['goods_id'=>'id']);
    }
    //goods_category  Goods表(商品分类)
    public function getGoodsCategory(){
        return $this->hasOne(Goods_category::className(),['id'=>'goods_category_id']);
    }
    //Goods  Brand表(品pai分类)
    public function getBrand(){
        return $this->hasOne(Brand::className(),['id'=>'brand_id']);
    }
    //封装一个$goodsCategory方法添加列表调用
    public static function getAddCategory(){
        return ArrayHelper::map(Goods_category::find()->all(),'id','name');
    }
    //封装一个Brand表(品pai分类)添加列表调用
    public static function getAddBrand(){
        return ArrayHelper::map(Brand::find()->all(),'id','name');
    }

}















